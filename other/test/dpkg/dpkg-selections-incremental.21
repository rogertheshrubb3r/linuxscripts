#!/bin/sh

# test multiple diff/patch: apply a series of patches to a base file to get last version

FILEDIR=/root/installed-packages

basefile=$FILEDIR/`ls -t1 $FILEDIR | tail -n1` # oldest file
newfile=$FILEDIR/packages-`date +%Y%m%d`.diff.gz

tmpfile=/tmp/debian-selections.tmp

if [ -f $newfile ]; then
    echo "A diff file with current date already exists. try again tomorrow!"
    exit 1
fi

echo "basefile: $basefile"

zcat $basefile > $tmpfile.old

for i in `ls $FILEDIR/*.diff.gz`; do 
# IMPORTANT: name order should be the same as date order!! 
# (dates should be in the format yyyy-mm-dd)
    echo "applying patch: $i"
    zcat $i | patch $tmpfile.old
done

dpkg --get-selections >$tmpfile.new
diff $tmpfile.old $tmpfile.new >$tmpfile.diff
#echo "exit code: $?"
if [ "$?" == "0" ]; then
    echo "No packages installed/upgraded/modified/removed since the last list update."
    exit 0
fi
echo "some packages were installed/upgraded/modified/removed since the last list update."
echo -n "writing changes to $newfile..."
cat $tmpfile.diff | gzip > $newfile
# remove temporary files
rm $tmpfile.old $tmpfile.new $tmpfile.diff
echo "done."
echo ""

echo "listing changes:"


installed=0; removed=0
zcat $newfile | while read -a line; do
    type=`echo $line | awk '{print $1}'`
#    package=`echo $line | awk '{print $2 "(was "$3")"}'`
    package=`echo $line`
    if [ "$type" == ">" ]; then # package installed
	echo "  $package" >> $tmpfile.installed
	let "installed = $installed + 1"
    elif [ "$type" == "<" ]; then # package deleted
	echo "  $package" >> $tmpfile.removed
	let "removed = $removed + 1"
    fi
done

echo "Removed/purged packages: $removed"
cat $tmpfile.removed

echo "Installed packages: $installed"
cat $tmpfile.installed
echo ""

rm $tmpfile.removed $tmpfile.installed
